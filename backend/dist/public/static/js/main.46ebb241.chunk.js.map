{"version":3,"sources":["utils/helpers.js","reduxStore/actions/index.js","reduxStore/constants.js","components/common/Login.jsx","components/common/Register.jsx","components/Landing/ChatroomList.jsx","components/Landing/User.jsx","components/Landing/Message.jsx","components/Landing/Chat.jsx","components/Landing/HomeChat.js","utils/constants.js","components/Landing/AuthLanding.jsx","components/Landing/index.js","components/common/Nav.jsx","components/AddFrined.jsx","components/common/PrivateRoute.jsx","components/chatroom/CreateChatRoom.jsx","components/chatroom/User.jsx","components/chatroom/MessageList.jsx","components/chatroom/Message.jsx","components/chatroom/Chat.jsx","components/chatroom/ChatSection.jsx","components/chatroom/index.jsx","App.js","serviceWorker.js","reduxStore/reducers/index.js","reduxStore/reducers/getProfileReducer.js","reduxStore/reducers/getUsers.js","reduxStore/reducers/getChatrooms.js","reduxStore/reducers/getMemers.js","reduxStore/reducers/getMessage.js","reduxStore/index.js","index.js","img/bg.gif"],"names":["getJWT","localStorage","getItem","authHeader","headers","Authorization","concat","logIn","data","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","user","wrap","_context","prev","next","axios","post","sent","token","setItem","push","window","location","reload","removeItem","t0","stop","this","_x","apply","arguments","signUp","formData","_ref2","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","value","_context2","delete","undefined","entries","Symbol","iterator","done","return","finish","statusText","pushState","_x2","getProfile","_ref3","_callee3","profile","disp","_context3","get","type","payload","_x3","getUsers","_ref4","_callee4","_context4","_x4","createChatRoom","_ref5","_callee5","chatroom","_context5","console","log","id","message","_x5","getChatrooms","_ref6","_callee6","chatrooms","_context6","_x6","getChatroomMember","_ref7","_callee7","members","_context7","_x7","getChatroomMessages","_ref8","_callee8","_context8","_x8","Login","state","email","password","changeHandler","_ref$target","target","name","_this","setState","defineProperty","submitHandler","_this$state","props","match","params","error","react_default","createElement","className","style","background","onSubmit","e","preventDefault","htmlFor","placeholder","onChange","required","onClick","Component","connect","actions","withRouter","Register","cpassword","isPasswordMatched","handleSubmit","form","document","getElementById","FormData","onPasswordChange","verifyPassword","_this$setState2","_this$setState3","_ref2$target","marginTop","marginBottom","encType","aria-describedby","disabled","ChatroomList","length","map","room","key","_id","NavLink","to","User","you","d","i","Message","Fragment","username","Chat","sendMessage","_this$props","socket","userName","uid","emit","onKeyUp","ownProps","C","host","chatroomhost","darkSkyApiKey","HomeChat","messages","componentDidMount","socketIOClient","query","on","toConsumableArray","users","Landing_Chat","getProfileReducer","AuthLanding","Landing_HomeChat","Landing","auth","Landing_AuthLanding","react","src","bg","alt","Nav","logout","dispayProfile","querySelector","classList","toggle","authToken","AddFriend","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","CreateChatRoom","createdBy","errorHandle","err","errorHandler","chatroom_User","MessageList","chatroom_Message","sender","ChatSection","chatroomid","_this$props2","oldMessages","chatroom_Chat","Chatroom","chatroom_ChatSection","getMembers","getMessage","App","common_Nav","Switch","exact","path","Home","Boolean","hostname","combineReducers","action","configureStore","createStore","mainReducer","composeWithDevTools","applyMiddleware","thunk","store","reduxStore","ReactDOM","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.46ebb241.chunk.js","sourcesContent":["export const getJWT = () => localStorage.getItem(\"chatter-auth\");\nexport const authHeader = {\n  headers: {\n    Authorization: `JWT ${getJWT()}`\n  }\n};\n\nexport const toCapitalize = str => {\n  return (\n    str &&\n    str\n      .split(\" \")\n      .map(d => d && d[0].toUpperCase() + d.slice(1))\n      .join(\" \")\n  );\n};\n","import axios from \"axios\";\nimport {\n  GET_PROFILE,\n  GET_CONNECTED_USER,\n  GET_CHAT_ROOM,\n  GET_CHAT_ROOM_MEMBER,\n  GET_CHAT_ROOM_MESSAGE\n} from \"../constants\";\nimport { authHeader } from \"../../utils/helpers\";\n\n// ===========LOGIN===========\nexport const logIn = (data, history) => async dispatch => {\n  try {\n    const user = await axios.post(\"/api/v1/users/login\", data);\n    if (user && user.data && user.data.token) {\n      localStorage.setItem(\"chatter-auth\", user.data.token);\n      history.push(\"/\");\n      window.location.reload();\n    } else {\n      localStorage.removeItem(\"chatter-auth\");\n      history.push(\"/login/error\");\n    }\n  } catch (e) {\n    if (e) {\n      localStorage.removeItem(\"chatter-auth\");\n      history.push(\"/login/error\");\n    }\n  }\n};\n\n// ++++++++++++++SIGNUP++++++++++++++\n\nexport const signUp = formData => async dispatch => {\n  let data = {};\n  formData.delete(\"cpassword\");\n  for (var value of formData.entries()) {\n    data[value[0]] = value[1];\n  }\n  const user = await axios.post(\"/api/v1/users/signup\", data);\n  if (user && user.statusText === \"Created\") {\n    window.history.pushState(null, null, \"/login\");\n    window.location.reload();\n  } else {\n    window.history.pushState(null, null, \"/register/error\");\n    window.location.reload();\n  }\n};\n\n// ==========Get Profie===============\nexport const getProfile = () => async dispatch => {\n  try {\n    const profile = await axios.get(\"/api/v1/users/profile\", authHeader);\n    let disp = { type: GET_PROFILE, payload: profile.data };\n    profile && profile.data && dispatch(disp);\n  } catch (err) {\n    localStorage.removeItem(\"chatter-auth\");\n    window.location.reload();\n  }\n};\n\nexport const getUsers = payload => async dispatch => {\n  let data = {\n    type: GET_CONNECTED_USER,\n    payload\n  };\n  payload && dispatch(data);\n};\n\n// =============CREATE CHAT-ROOM=============\n\nexport const createChatRoom = (data, history) => async dispatch => {\n  try {\n    const chatroom = await axios.post(\n      \"/api/v1/chat/create-chatroom\",\n      data,\n      authHeader\n    );\n    if (chatroom && chatroom.data && chatroom.data.chatroom) {\n      console.log(\"chatroom\", chatroom.data);\n      history.push(`/chatroom/${chatroom.data.id}`);\n    } else if (chatroom && chatroom.data.message) {\n      history.push(\"/create-chatroom/error-chat-room-exist\");\n    } else {\n      history.push(\"/create-chatroom/error\");\n    }\n  } catch (e) {\n    if (e) {\n      history.push(\"/create-chatroom/error\");\n    }\n  }\n};\n\n// ===========GET--CHATROOM================\n\nexport const getChatrooms = () => async dispatch => {\n  try {\n    const chatrooms = await axios.get(\"/api/v1/chat/chatrooms\", authHeader);\n    let disp = { type: GET_CHAT_ROOM, payload: chatrooms.data };\n    chatrooms && chatrooms.data && dispatch(disp);\n  } catch (err) {\n    console.log(\"ERROR\", err);\n  }\n};\nexport const getChatroomMember = id => async dispatch => {\n  try {\n    const members = await axios.get(`/api/v1/chat/members/${id}`, authHeader);\n    if (members) {\n      let disp = { type: GET_CHAT_ROOM_MEMBER, payload: members.data };\n      members && members.data && dispatch(disp);\n    } else {\n      console.log(\"ERROR \");\n    }\n  } catch (err) {\n    console.log(\"ERROR\", err);\n  }\n};\nexport const getChatroomMessages = id => async dispatch => {\n  try {\n    const message = await axios.get(`/api/v1/chat/messages/${id}`, authHeader);\n    if (message) {\n      let disp = { type: GET_CHAT_ROOM_MESSAGE, payload: message.data };\n      message && message.data && dispatch(disp);\n    } else {\n      console.log(\"ERROR \");\n    }\n  } catch (err) {\n    console.log(\"ERROR\", err);\n  }\n};\n","export const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_CONNECTED_USER = \"GET_CONNECTED_USER\";\nexport const GET_CHAT_ROOM = \"GET_CHAT_ROOM\";\nexport const GET_CHAT_ROOM_MEMBER = \"GET_CHAT_ROOM_MEMBER\";\nexport const GET_CHAT_ROOM_MESSAGE = \"GET_CHAT_ROOM_MESSAGE\";\n","import React, { Component } from \"react\";\nimport * as actions from \"../../reduxStore/actions\";\nimport { connect } from \"react-redux\";\nimport { getJWT } from \"../../utils/helpers\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  changeHandler = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = () => {\n    const { email, password } = this.state;\n    this.props.logIn({ email, password }, this.props.history);\n    this.setState({ email: \"\", password: \"\" });\n  };\n\n  componentDidMount() {\n    if (getJWT()) {\n      this.props.history.push(\"/\");\n    }\n    let error = this.props.match.params.error;\n    if (error) {\n      this.setState({ email: \"\", password: \"\" });\n    }\n  }\n\n  render() {\n    let error = this.props.match.params.error;\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-sm-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\" style={{ background:\"#fcb4b8\"}}>\n            {error && (\n              <div className=\"alert-danger\">\n                Email or password not matched!!\n              </div>\n            )}\n            <form onSubmit={e => e.preventDefault()}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"rememberCheckBox\"\n                  name=\"remember\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"rememberCheckBox\">\n                  Remember me\n                </label>\n              </div>\n              <button\n                type=\"submit\"\n                onClick={this.submitHandler}\n                className=\"btn  mt-3\"\n              >\n                Submit\n              </button>\n              <button type=\"reset\" className=\"btn ml-3 mt-3\">\n                Reset\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport * as actions from \"../../reduxStore/actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends Component {\n  state = {\n    password: \"\",\n    cpassword: \"\",\n    isPasswordMatched: true\n  };\n  handleSubmit = e => {\n    //   const form = document.querySelector(\"#register\");\n    const form = document.getElementById(\"register\");\n    let formData = new FormData(form);\n    // const formData = { name: \"name raj\" };\n\n    this.props.signUp(formData);\n  };\n  onPasswordChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  verifyPassword = ({ target: { value, name } }) => {\n    if (value === this.state.password) {\n      this.setState({ [name]: value, isPasswordMatched: true });\n    } else {\n      this.setState({ [name]: value, isPasswordMatched: false });\n    }\n  };\n\n  render() {\n    const { password, cpassword, isPasswordMatched } = this.state;\n    const {\n      params: { error }\n    } = this.props.match;\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\" style={{ background: \"#fcb4b8\" }}>\n          {error && (\n            <div\n              className=\"alert-danger p-2 text-center\"\n              style={{ marginTop: \"-50px\", marginBottom: \"20px\" }}\n            >\n              <strong>Failed !! </strong> to create account <br />\n              <strong> Please try again !!!</strong>\n            </div>\n          )}\n          <form\n            onSubmit={e => e.preventDefault()}\n            id=\"register\"\n            encType=\"multipart/form-data\"\n            name=\"register\"\n          >\n            <div className=\"title\">\n              <h1>Registration Form</h1>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"userName\">User Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"userName\"\n                  placeholder=\"User Name\"\n                  name=\"userName\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"Password\"\n                  onChange={this.onPasswordChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"cpassword\"> Conform Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"cpassword\"\n                  value={cpassword}\n                  name=\"cpassword\"\n                  onChange={this.verifyPassword}\n                  aria-describedby=\"pass\"\n                  placeholder=\"Conform Password\"\n                  required\n                />\n                {!isPasswordMatched && (\n                  <small id=\"pass\" className=\"form-text text-danger\">\n                    Password not Mathched\n                  </small>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                name=\"address\"\n                placeholder=\"Eg:-Kathmandu\"\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              onClick={this.handleSubmit}\n              className=\"btn \"\n              disabled={isPasswordMatched ? false : true}\n            >\n              Register\n            </button>\n            <button type=\"reset\" className=\"btn  ml-4\">\n              Reset\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Register);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function ChatroomList({ chatrooms }) {\n  return (\n    <div className=\"chatroom-container mt-5\">\n      <h5>List of Chatrooms</h5>\n      {chatrooms &&\n        chatrooms.length > 0 &&\n        chatrooms.map(room => (\n          <div className=\"room pb-1 pl-4\" key={room._id}>\n            <NavLink to={`chatroom/${room._id}`}>{room.chatroom}</NavLink>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default ({ user, you }) => {\n  return (\n    <div className=\"list\">\n      <h3>Online user </h3>\n      {user &&\n        user.map((d, i) => (\n          <div\n            className={d === you ? \"you list-item\" : \"list-item\"}\n            key={d + i}\n          >\n            <i className=\"fa fa-user\" /> &nbsp;\n            {d}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ message, user }) => {\n  return (\n    <React.Fragment>\n      {message &&\n        message.map((d, i) => (\n          <div\n            className={d.username === user ? \"you message\" : \"message\"}\n            key={d.message + i}\n          >\n            <span>{d.username} :</span> {d.message}\n          </div>\n        ))}\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Chat extends Component {\n  state = {\n    message: \"\"\n  };\n\n  sendMessage = ({ key }) => {\n    const { socket, profile } = this.props;\n    const { message } = this.state;\n    const data = {\n      username: profile.userName,\n      uid: profile.id,\n      message\n    };\n    if (key === \"Enter\") {\n      socket.emit(\"message\", data);\n      this.setState({ message: \"\" });\n    }\n  };\n\n  onChange = ({ target: { value } }) => {\n    this.setState({ message: value });\n  };\n\n  render() {\n    const { message } = this.state;\n    return (\n      <form className=\"chat-text-input\" onSubmit={e => e.preventDefault()}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"chat\"\n            name=\"message\"\n            value={message}\n            onChange={this.onChange}\n            onKeyUp={this.sendMessage}\n            aria-describedby=\"chat-text\"\n            placeholder=\"Enter text to chat\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  state\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Chat);\n","import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { connect } from \"react-redux\";\n\nimport constants from \"../../utils/constants\";\nimport User from \"./User\";\nimport Message from \"./Message\";\nimport Chat from \"./Chat\";\nimport * as actions from \"../../reduxStore/actions\";\nconst C = constants();\nclass HomeChat extends Component {\n  state = {\n    socket: \"\",\n    messages: []\n  };\n\n  componentDidMount = () => {\n    let { profile } = this.props;\n    const { userName, id } = profile && profile;\n    if (profile) {\n      const socket = socketIOClient(C.host, {\n        query: \"username=\" + userName + \"&uid=\" + id\n      });\n      socket.on(\"message\", data => {\n        let { messages } = this.state;\n        messages = [...messages, data];\n        this.setState({ messages });\n      });\n\n      socket.on(\"updateUsersList\", data => {\n        this.props.getUsers(data);\n      });\n\n      this.setState({ socket });\n    }\n  };\n\n  render() {\n    let { profile, users } = this.props;\n    const { socket, messages } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4 chat-container\">\n          <div className=\"col-sm-3\">\n            <User user={users} you={profile && profile.userName} />\n          </div>\n          <div className=\"col-sm-9\">\n            <Message message={messages} user={profile && profile.userName} />\n            <Chat socket={socket} profile={profile} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer,\n  users: state.getUsers\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(HomeChat);\n","export default () => ({\n  host: \"ws://localhost:4000\",\n  chatroomhost: \"ws://localhost:4000/chatroom\",\n  darkSkyApiKey: \"255ca3e599e402e7891bc5f329f7428c\"\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport ChatroomList from \"./ChatroomList\";\nimport HomeChat from \"./HomeChat\";\n\nclass AuthLanding extends Component {\n  componentDidMount = () => {\n    this.props.getChatrooms();\n  };\n\n  render() {\n    const { chatrooms } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-2\">\n            {chatrooms && <ChatroomList chatrooms={chatrooms && chatrooms} />}\n          </div>\n          <div className=\"col-sm-10\">\n            <HomeChat />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer,\n  chatrooms: state.getChatrooms\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(AuthLanding);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport \"./landing.css\";\nimport { NavLink } from \"react-router-dom\";\nimport bg from \"../../img/bg.gif\";\nimport { getJWT } from \"../../utils/helpers\";\nimport AuthLanding from \"./AuthLanding\";\n\nclass Landing extends Component {\n  render() {\n    let auth = getJWT();\n    let { profile } = this.props;\n    return (\n      <div id={!auth ? \"landing\" : \"auth-landing\"}>\n        {auth && profile ? (\n          <AuthLanding profile={profile} />\n        ) : (\n          <Fragment>\n            <img src={bg} alt=\"bg\" />\n            <div className=\"overlay\">\n              <div className=\"text\">\n                <h1>ChaTTer</h1>\n                <div>Connet easily</div>\n                <NavLink\n                  to={auth ? \"/pay/\" : \"/register\"}\n                  className=\"border btn text-white mt-3\"\n                >\n                  {auth ? \"pay\" : \"Sign Up for Free\"}\n                </NavLink>\n                <div className=\"d-block d-lg-none\">\n                  <NavLink className=\"btn border mt-3 text-white\" to=\"/login\">\n                    Login\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ profile: state.getProfileReducer });\nexport default connect(\n  mapStateToProps,\n  actions\n)(Landing);\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { getJWT } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport \"./nav.css\";\nclass Nav extends Component {\n  componentDidMount = () => {\n    const { profile } = this.props;\n    let auth = getJWT();\n    auth && !profile && this.props.getProfile();\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"chatter-auth\");\n    this.props.history.push(\"/\");\n    window.location.reload();\n  };\n\n  dispayProfile = () => {\n    let profileContainer = document.querySelector(\".profile\");\n    let ls = profileContainer.classList;\n    ls.toggle(\"d-none\");\n  };\n\n  render() {\n    const authToken = getJWT();\n    const { profile } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <div className=\"container\">\n          <NavLink className=\"navbar-brand\" to=\"/\">\n            ChaTTer\n          </NavLink>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav d-none d-sm-block d-md-none\">\n              <li className=\"nav-item active\">\n                <NavLink className=\"nav-link\" to=\"/\">\n                  login\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          {authToken ? (\n            <Fragment>\n              {/* <NavLink\n                className=\"pl-3 pr-3\"\n                to=\"/chat\"\n                id=\"send\"\n                data-toggle={profile && profile.credits === 0 ? \"modal\" : \"\"}\n                data-target={profile && profile.credits === 0 ? \"#myModal\" : \"\"}\n              >\n                Begin Chat\n              </NavLink> */}\n              <NavLink className=\"float-right pl-3 pr-3\" to=\"/add-friend\">\n                Add Friend\n              </NavLink>\n              <NavLink className=\"float-right pl-3 pr-3\" to=\"/create-chatroom\">\n                Create Chatroom\n              </NavLink>\n              {profile && (\n                <div className=\"profile-container\">\n                  <div className=\"profile d-none\">\n                    <div>\n                      <NavLink to=\"/profile-edit\" onClick={this.dispayProfile}>\n                        Edit Profile\n                      </NavLink>\n                    </div>\n                    <div>User Name: {profile && profile.userName}</div>\n                    <div onClick={this.logout}>Logout</div>\n                  </div>\n                </div>\n              )}\n              <span\n                className=\"d-none d-lg-block m-1 p-1 text-white\"\n                onClick={this.dispayProfile}\n              >\n                profile\n              </span>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <NavLink className=\"float-right d-none d-lg-block\" to=\"/register\">\n                Register\n              </NavLink>\n\n              <NavLink\n                className=\"float-right d-none d-lg-block ml-3\"\n                to=\"/login\"\n              >\n                Login\n              </NavLink>\n            </Fragment>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(withRouter(Nav));\n","import React, { Component } from \"react\";\n\nexport default class AddFriend extends Component {\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"alert alert-success text-center\">\n          <strong>Success!</strong> Now add frineds.\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getJWT } from \"../../utils/helpers\";\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  let auth = getJWT();\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport \"./chat.css\";\nclass CreateChatRoom extends Component {\n  state = {\n    chatroom: \"\"\n  };\n  submitHandler = () => {\n    const { profile, createChatRoom, history } = this.props;\n    const { chatroom } = this.state;\n    if (chatroom && profile) {\n      let data = {\n        chatroom,\n        createdBy: profile.id\n      };\n      createChatRoom(data, history);\n    }\n  };\n\n  changeHandler = ({ target: { value } }) => {\n    this.setState({ chatroom: value });\n  };\n\n  errorHandle = () => {\n    console.log(\"ERRor\");\n  };\n\n  render() {\n    let { chatroom } = this.state;\n    let err = this.props.match.params && this.props.match.params.error;\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div\n            className=\"jumbotron col-sm-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\"\n            style={{ background: \"#fcb4b8\" }}\n          >\n            {chatroom && chatroom.length < 5 && (\n              <span className=\"chat-warning\">Name should be 5 char long</span>\n            )}\n            {err && err === \"error-chat-room-exist\" && (\n              <span className=\"chat-warning\">Chatroom Already exist</span>\n            )}\n            {err && err === \"error\" && (\n              <span className=\"chat-warning\">\n                Error occure while creating chatroom <br /> Please Try again\n              </span>\n            )}\n            <form onSubmit={e => e.preventDefault()}>\n              <label htmlFor=\"chatroom\">Create Chatroom</label>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"chatroom\"\n                  name=\"chatroom\"\n                  value={chatroom}\n                  placeholder=\"Enter Name of Chatroom\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                onClick={\n                  chatroom.length >= 5 ? this.submitHandler : this.errorHandler\n                }\n                className=\"btn pull-right  mt-3\"\n              >\n                Create\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(CreateChatRoom);\n","import React from \"react\";\n\nexport default ({ user, you }) => {\n  return (\n    <div className=\"list\">\n      <h3>Member List</h3>\n      {user &&\n        user.map((d, i) => (\n          <div\n            className={d.userName === you ? \"you list-item\" : \"list-item\"}\n            key={d.userName + i}\n          >\n            <i className=\"fa fa-user\" /> &nbsp;\n            {d.userName}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ message, user, you }) => {\n  return (\n    <div className={you === user ? \"you message\" : \"message\"}>\n      <span>{user} :</span> {message}\n    </div>\n  );\n};\n","import React from \"react\";\nimport MessageList from \"./MessageList\";\n\nexport default ({ message, you }) => {\n  console.log(\"Message\");\n  return (\n    <React.Fragment>\n      {message &&\n        message.map((d, i) => (\n          <MessageList\n            user={d.username ? d.username : d.sender ? d.sender.userName : \"\"}\n            you={you}\n            key={d.message + i}\n            message={d.message}\n          />\n        ))}\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Chat extends Component {\n  state = {\n    message: \"\"\n  };\n\n  sendMessage = ({ key }) => {\n    const { socket, profile } = this.props;\n    const { message } = this.state;\n    const data = {\n      username: profile.userName,\n      uid: profile.id,\n      message\n    };\n    if (key === \"Enter\") {\n      socket.emit(\"message\", data);\n      this.setState({ message: \"\" });\n    }\n  };\n\n  onChange = ({ target: { value } }) => {\n    this.setState({ message: value });\n  };\n\n  render() {\n    const { message } = this.state;\n    return (\n      <form className=\"chat-text-input\" onSubmit={e => e.preventDefault()}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"chat\"\n            name=\"message\"\n            value={message}\n            onChange={this.onChange}\n            onKeyUp={this.sendMessage}\n            aria-describedby=\"chat-text\"\n            placeholder=\"Enter text to chat\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  state\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Chat);\n","import React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport Chat from \"./Chat\";\nimport socketIOClient from \"socket.io-client\";\nimport constants from \"../../utils/constants\";\n\nconst C = constants();\n\nclass ChatSection extends Component {\n  state = {\n    socket: \"\",\n    messages: []\n  };\n  componentDidMount = () => {\n    let { profile, chatroomid } = this.props;\n    const { userName, id } = profile && profile;\n    if (profile) {\n      const socket = socketIOClient(C.chatroomhost, {\n        query: `username=${userName}&uid=${id}&chatroom=${chatroomid}`\n      });\n      socket.on(\"message\", data => {\n        let { messages } = this.state;\n        messages = [...messages, data];\n        this.setState({ messages });\n      });\n\n      // socket.on(\"updateUsersList\", data => {\n      //   this.props.getUsers(data);\n      // });\n      this.setState({ socket });\n    }\n  };\n\n  render() {\n    let { profile, chatroomid, oldMessages } = this.props;\n    const { socket, messages } = this.state;\n    oldMessages = oldMessages && messages && [...oldMessages, ...messages];\n    return (\n      <div className=\"col-sm-9\">\n        {oldMessages && (\n          <Message message={oldMessages} you={profile && profile.userName} />\n        )}\n        <Chat socket={socket} profile={profile} id={chatroomid} />\n      </div>\n    );\n  }\n}\nexport default ChatSection;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport User from \"./User\";\nimport ChatSection from \"./ChatSection\";\nclass Chatroom extends Component {\n  componentDidMount = () => {\n    let chatroomid = this.props.match.params && this.props.match.params.id;\n    this.props.getChatroomMember(chatroomid);\n    this.props.getChatroomMessages(chatroomid);\n  };\n\n  render() {\n    let chatroomid = this.props.match.params && this.props.match.params.id;\n    let { profile, members, messages } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4 chat-container\">\n          <div className=\"col-sm-3\">\n            <User user={members} you={profile && profile.userName} />\n          </div>\n          {profile && members && chatroomid && (\n            <ChatSection\n              profile={profile}\n              oldMessages={messages}\n              members={members}\n              chatroomid={chatroomid}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer,\n  members: state.getMembers,\n  messages: state.getMessage\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Chatroom);\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/common/Login\";\nimport Register from \"./components/common/Register\";\nimport Landing from \"./components/Landing\";\nimport Nav from \"./components/common/Nav\";\nimport AddFriend from \"./components/AddFrined\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport CreateChatRoom from \"./components/chatroom/CreateChatRoom\";\nimport Chatroom from \"./components/chatroom\";\nimport Home from \"./components/Landing/HomeChat\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/login/:error?\" component={Login} />\n          <Route exact path=\"/register/:error?\" component={Register} />\n          <Route exact path=\"/\" component={Landing} />\n          <PrivateRoute exact path=\"/add-friend\" component={AddFriend} />\n          <PrivateRoute\n            exact\n            path=\"/create-chatroom/:error?\"\n            component={CreateChatRoom}\n          />\n          <PrivateRoute exact path=\"/chatroom/:id\" component={Chatroom} />\n          <PrivateRoute exact path=\"/home\" component={Home} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport getProfileReducer from \"./getProfileReducer\";\nimport getUsers from \"./getUsers\";\nimport getChatrooms from \"./getChatrooms\";\nimport getMembers from \"./getMemers\";\nimport getMessage from \"./getMessage\";\n\nexport default combineReducers({\n  getProfileReducer,\n  getUsers,\n  getChatrooms,\n  getMembers,\n  getMessage\n});\n","import { GET_PROFILE } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CONNECTED_USER } from \"../constants\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case GET_CONNECTED_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_ROOM } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_ROOM:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_ROOM_MEMBER } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_ROOM_MEMBER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_ROOM_MESSAGE } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_ROOM_MESSAGE:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport mainReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nfunction configureStore() {\n  return createStore(mainReducer, composeWithDevTools(applyMiddleware(thunk)));\n}\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport reduxStore from \"./reduxStore\";\nimport \"jquery\";\nimport \"popper.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nconst store = reduxStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.91f1dec1.gif\";"],"sourceRoot":""}