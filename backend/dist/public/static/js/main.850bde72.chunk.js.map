{"version":3,"sources":["utils/helpers.js","reduxStore/actions/index.js","reduxStore/constants.js","components/Login.jsx","components/Register.jsx","components/Landing.jsx","App.js","serviceWorker.js","reduxStore/reducers/index.js","reduxStore/reducers/getProfileReducer.js","reduxStore/index.js","index.js"],"names":["getJWT","localStorage","getItem","authHeader","headers","Authorization","logIn","data","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","user","wrap","_context","prev","next","axios","post","sent","token","push","setItem","window","location","reload","removeItem","t0","stop","this","_x","apply","arguments","signUp","formData","_ref2","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","value","_context2","delete","undefined","entries","Symbol","iterator","done","return","finish","statusText","pushState","_x2","getProfile","_ref3","_callee3","profile","disp","_context3","get","type","payload","_x3","Login","state","email","password","changeHandler","_ref$target","target","name","_this","setState","defineProperty","submitHandler","_this$state","props","match","params","error","react_default","createElement","className","onSubmit","e","preventDefault","htmlFor","id","placeholder","onChange","required","onClick","Component","connect","actions","withRouter","Register","cpassword","isPasswordMatched","handleSubmit","form","document","getElementById","FormData","onPasswordChange","verifyPassword","_this$setState2","_this$setState3","_ref2$target","style","marginTop","marginBottom","encType","aria-describedby","disabled","Landing","console","log","App","react","Switch","Route","exact","path","component","Boolean","hostname","combineReducers","getProfileReducer","length","action","configureStore","store","createStore","mainReducer","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","reduxStore","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.850bde72.chunk.js","sourcesContent":["export const getJWT = () => localStorage.getItem(\"onpay-jwt\");\nexport const authHeader = {\n  headers: {\n    Authorization: getJWT()\n  }\n};\n\nexport const toCapitalize = str => {\n  return (\n    str &&\n    str\n      .split(\" \")\n      .map(d => d && d[0].toUpperCase() + d.slice(1))\n      .join(\" \")\n  );\n};\n","import axios from \"axios\";\nimport { GET_PROFILE } from \"../constants\";\nimport { authHeader } from \"../../utils/helpers\";\n\n// ===========LOGIN===========\nexport const logIn = (data, history) => async dispatch => {\n  try {\n    const user = await axios.post(\"/api/v1/users/login\", data);\n    if (user && user.data && user.data.token) {\n      history.push(\"/\");\n      localStorage.setItem(\"onpay-jwt\", user.data.token);\n      window.location.reload();\n    } else {\n      localStorage.removeItem(\"onpay-jwt\");\n      history.push(\"/login/error\");\n    }\n  } catch (e) {\n    if (e) {\n      localStorage.removeItem(\"onpay-jwt\");\n      history.push(\"/login/error\");\n    }\n  }\n};\n\n// ++++++++++++++SIGNUP++++++++++++++\n\nexport const signUp = formData => async dispatch => {\n  let data = {};\n  formData.delete(\"cpassword\");\n  for (var value of formData.entries()) {\n    data[value[0]] = value[1];\n  }\n  const user = await axios.post(\"/api/v1/users/signup\", data);\n  if (user && user.statusText === \"Created\") {\n    window.history.pushState(null, null, \"/login\");\n    window.location.reload();\n  } else {\n    window.history.pushState(null, null, \"/register/error\");\n    window.location.reload();\n  }\n};\n\n// ==========Get Profie===============\nexport const getProfile = () => async dispatch => {\n  try {\n    const profile = await axios.get(\"/api/v1/users/profile\", authHeader);\n    let disp = { type: GET_PROFILE, payload: profile.data };\n    profile && profile.data && dispatch(disp);\n  } catch (err) {\n    localStorage.removeItem(\"onpay-jwt\");\n    window.location.reload();\n  }\n};\n","export const GET_PROFILE = \"GET_PROFILE\";\n","import React, { Component } from \"react\";\nimport * as actions from \"../reduxStore/actions\";\nimport { connect } from \"react-redux\";\nimport { getJWT } from \"../utils/helpers\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  changeHandler = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = () => {\n    const { email, password } = this.state;\n    this.props.logIn({ email, password }, this.props.history);\n    this.setState({ email: \"\", password: \"\" });\n  };\n\n  componentDidMount() {\n    if (getJWT()) {\n      this.props.history.push(\"/\");\n    }\n    let error = this.props.match.params.error;\n    if (error) {\n      this.setState({ email: \"\", password: \"\" });\n    }\n  }\n\n  render() {\n    let error = this.props.match.params.error;\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-sm-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n            {error && (\n              <div className=\"alert-danger\">\n                Email or password not matched!!\n              </div>\n            )}\n            <form onSubmit={e => e.preventDefault()}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"rememberCheckBox\"\n                  name=\"remember\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"rememberCheckBox\">\n                  Remember me\n                </label>\n              </div>\n              <button\n                type=\"submit\"\n                onClick={this.submitHandler}\n                className=\"btn  mt-3\"\n              >\n                Submit\n              </button>\n              <button type=\"reset\" className=\"btn ml-3 mt-3\">\n                Reset\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport * as actions from \"../reduxStore/actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends Component {\n  state = {\n    password: \"\",\n    cpassword: \"\",\n    isPasswordMatched: true\n  };\n  handleSubmit = e => {\n    //   const form = document.querySelector(\"#register\");\n    const form = document.getElementById(\"register\");\n    let formData = new FormData(form);\n    // const formData = { name: \"name raj\" };\n\n    this.props.signUp(formData);\n  };\n  onPasswordChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  verifyPassword = ({ target: { value, name } }) => {\n    if (value === this.state.password) {\n      this.setState({ [name]: value, isPasswordMatched: true });\n    } else {\n      this.setState({ [name]: value, isPasswordMatched: false });\n    }\n  };\n\n  render() {\n    const { password, cpassword, isPasswordMatched } = this.state;\n    const {\n      params: { error }\n    } = this.props.match;\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          {error && (\n            <div\n              className=\"alert-danger p-2 text-center\"\n              style={{ marginTop: \"-50px\", marginBottom: \"20px\" }}\n            >\n              <strong>Failed !! </strong> to create account <br />\n              <strong> Please try again !!!</strong>\n            </div>\n          )}\n          <form\n            onSubmit={e => e.preventDefault()}\n            id=\"register\"\n            encType=\"multipart/form-data\"\n            name=\"register\"\n          >\n            <div className=\"title\">\n              <h1>Registration Form</h1>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"userName\">User Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"userName\"\n                  placeholder=\"User Name\"\n                  name=\"userName\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"Password\"\n                  onChange={this.onPasswordChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"cpassword\"> Conform Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"cpassword\"\n                  value={cpassword}\n                  name=\"cpassword\"\n                  onChange={this.verifyPassword}\n                  aria-describedby=\"pass\"\n                  placeholder=\"Conform Password\"\n                  required\n                />\n                {!isPasswordMatched && (\n                  <small id=\"pass\" className=\"form-text text-danger\">\n                    Password not Mathched\n                  </small>\n                )}\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                name=\"address\"\n                placeholder=\"Kathmandu\"\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              onClick={this.handleSubmit}\n              className=\"btn \"\n              disabled={isPasswordMatched ? false : true}\n            >\n              Register\n            </button>\n            <button type=\"reset\" className=\"btn  ml-4\">\n              Reset\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../reduxStore/actions\";\nimport \"./landing.css\";\nclass Landing extends Component {\n  render() {\n    console.log(\"this.props\", this.props);\n    return (\n      <div>\n        <div id=\"landing\">Landing</div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ state });\nexport default connect(\n  mapStateToProps,\n  actions\n)(Landing);\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Landing from \"./components/Landing\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path=\"/login/:error?\" component={Login} />\n          <Route exact path=\"/register/:error?\" component={Register} />\n          <Route exact path=\"/\" component={Landing} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport getProfileReducer from \"./getProfileReducer\";\nexport default combineReducers({\n  getProfileReducer\n});\n","import { GET_PROFILE } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport mainReducer from \"./reducers\";\nfunction configureStore() {\n  return createStore(\n    mainReducer,\n    {},\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport reduxStore from \"./reduxStore\";\nconst store = reduxStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}