{"version":3,"sources":["utils/helpers.js","reduxStore/actions/index.js","reduxStore/constants.js","components/common/Login.jsx","components/common/Register.jsx","components/Landing/User.jsx","components/Landing/Message.jsx","components/Landing/Chat.jsx","components/Landing/AuthLanding.jsx","utils/constants.js","components/Landing/index.js","components/common/Nav.jsx","components/AddFrined.jsx","components/common/PrivateRoute.jsx","App.js","serviceWorker.js","reduxStore/reducers/index.js","reduxStore/reducers/getProfileReducer.js","reduxStore/reducers/getUsers.js","reduxStore/reducers/getChatrooms.js","reduxStore/reducers/getMemers.js","reduxStore/reducers/getMessage.js","reduxStore/index.js","index.js","img/bg.gif"],"names":["getJWT","localStorage","getItem","authHeader","headers","Authorization","concat","logIn","data","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","user","wrap","_context","prev","next","axios","post","sent","token","setItem","push","window","location","reload","removeItem","t0","stop","this","_x","apply","arguments","signUp","formData","_ref2","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","value","_context2","delete","undefined","entries","Symbol","iterator","done","return","finish","statusText","pushState","_x2","getProfile","_ref3","_callee3","profile","disp","_context3","get","type","payload","_x3","getUsers","_ref4","_callee4","_context4","_x4","getMembers","_ref5","_callee5","members","_context5","console","log","_x5","getMessages","_ref6","_callee6","message","_context6","_x6","Login","state","email","password","changeHandler","_ref$target","target","name","_this","setState","defineProperty","submitHandler","_this$state","props","match","params","error","react_default","createElement","className","style","background","onSubmit","e","preventDefault","htmlFor","id","placeholder","onChange","required","onClick","Component","connect","actions","withRouter","Register","cpassword","isPasswordMatched","handleSubmit","form","document","getElementById","FormData","onPasswordChange","verifyPassword","_this$setState2","_this$setState3","_ref2$target","marginTop","marginBottom","encType","aria-describedby","disabled","User","you","allUser","map","d","i","userName","includes","key","Message","allMessage","Fragment","sender","username","Chat","sendMessage","_this$props","socket","uid","emit","onKeyUp","ownProps","C","host","darkSkyApiKey","AuthLanding","messages","componentDidMount","socketIOClient","query","on","toConsumableArray","scrollToBottom","getElementsByClassName","scrollTop","scrollHeight","clientHeight","users","Landing_Chat","getProfileReducer","getMessage","Landing","auth","Landing_AuthLanding","react","src","bg","alt","NavLink","to","Nav","logout","dispayProfile","querySelector","classList","toggle","authToken","AddFriend","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","App","common_Nav","Switch","exact","path","Boolean","hostname","combineReducers","length","action","getChatrooms","configureStore","createStore","mainReducer","composeWithDevTools","applyMiddleware","thunk","store","reduxStore","ReactDOM","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c820913d.chunk.js","sourcesContent":["export const getJWT = () => localStorage.getItem(\"chatter-auth\");\nexport const authHeader = {\n  headers: {\n    Authorization: `JWT ${getJWT()}`\n  }\n};\n\nexport const toCapitalize = str => {\n  return (\n    str &&\n    str\n      .split(\" \")\n      .map(d => d && d[0].toUpperCase() + d.slice(1))\n      .join(\" \")\n  );\n};\n","import axios from \"axios\";\nimport {\n  GET_PROFILE,\n  GET_CONNECTED_USER,\n  GET_CHAT_MESSAGE,\n  GET_CHAT_MEMBER\n} from \"../constants\";\nimport { authHeader } from \"../../utils/helpers\";\n\n// ===========LOGIN===========\nexport const logIn = (data, history) => async dispatch => {\n  try {\n    const user = await axios.post(\"/api/v1/users/login\", data);\n    if (user && user.data && user.data.token) {\n      localStorage.setItem(\"chatter-auth\", user.data.token);\n      history.push(\"/\");\n      window.location.reload();\n    } else {\n      localStorage.removeItem(\"chatter-auth\");\n      history.push(\"/login/error\");\n    }\n  } catch (e) {\n    if (e) {\n      localStorage.removeItem(\"chatter-auth\");\n      history.push(\"/login/error\");\n    }\n  }\n};\n\n// ++++++++++++++SIGNUP++++++++++++++\n\nexport const signUp = formData => async dispatch => {\n  let data = {};\n  formData.delete(\"cpassword\");\n  for (var value of formData.entries()) {\n    data[value[0]] = value[1];\n  }\n  const user = await axios.post(\"/api/v1/users/signup\", data);\n  if (user && user.statusText === \"Created\") {\n    window.history.pushState(null, null, \"/login\");\n    window.location.reload();\n  } else {\n    window.history.pushState(null, null, \"/register/error\");\n    window.location.reload();\n  }\n};\n\n// ==========Get Profie===============\nexport const getProfile = () => async dispatch => {\n  try {\n    const profile = await axios.get(\"/api/v1/users/profile\", authHeader);\n    let disp = { type: GET_PROFILE, payload: profile.data };\n    profile && profile.data && dispatch(disp);\n  } catch (err) {\n    localStorage.removeItem(\"chatter-auth\");\n    window.location.reload();\n  }\n};\n\nexport const getUsers = payload => async dispatch => {\n  let data = {\n    type: GET_CONNECTED_USER,\n    payload\n  };\n  payload && dispatch(data);\n};\n\nexport const getMembers = () => async dispatch => {\n  try {\n    const members = await axios.get(`/api/v1/chat/members`, authHeader);\n    if (members) {\n      let disp = { type: GET_CHAT_MEMBER, payload: members.data };\n      members && members.data && dispatch(disp);\n    } else {\n      console.log(\"ERROR \");\n    }\n  } catch (err) {\n    console.log(\"ERROR\", err);\n  }\n};\nexport const getMessages = () => async dispatch => {\n  try {\n    const message = await axios.get(\"/api/v1/chat/messages\", authHeader);\n    if (message) {\n      let disp = { type: GET_CHAT_MESSAGE, payload: message.data };\n      message && message.data && dispatch(disp);\n    } else {\n      console.log(\"ERROR \");\n    }\n  } catch (err) {\n    console.log(\"ERROR\", err);\n  }\n};\n","export const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_CONNECTED_USER = \"GET_CONNECTED_USER\";\nexport const GET_CHAT_ROOM = \"GET_CHAT_ROOM\";\nexport const GET_CHAT_MEMBER = \"GET_CHAT_MEMBER\";\nexport const GET_CHAT_MESSAGE = \"GET_CHAT_MESSAGE\";\n","import React, { Component } from \"react\";\nimport * as actions from \"../../reduxStore/actions\";\nimport { connect } from \"react-redux\";\nimport { getJWT } from \"../../utils/helpers\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  changeHandler = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = () => {\n    const { email, password } = this.state;\n    this.props.logIn({ email, password }, this.props.history);\n    this.setState({ email: \"\", password: \"\" });\n  };\n\n  componentDidMount() {\n    if (getJWT()) {\n      this.props.history.push(\"/\");\n    }\n    let error = this.props.match.params.error;\n    if (error) {\n      this.setState({ email: \"\", password: \"\" });\n    }\n  }\n\n  render() {\n    let error = this.props.match.params.error;\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-sm-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\" style={{ background:\"#fcb4b8\"}}>\n            {error && (\n              <div className=\"alert-danger\">\n                Email or password not matched!!\n              </div>\n            )}\n            <form onSubmit={e => e.preventDefault()}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.changeHandler}\n                  required\n                />\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"rememberCheckBox\"\n                  name=\"remember\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"rememberCheckBox\">\n                  Remember me\n                </label>\n              </div>\n              <button\n                type=\"submit\"\n                onClick={this.submitHandler}\n                className=\"btn  mt-3\"\n              >\n                Submit\n              </button>\n              <button type=\"reset\" className=\"btn ml-3 mt-3\">\n                Reset\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport * as actions from \"../../reduxStore/actions\";\nimport { connect } from \"react-redux\";\n\nclass Register extends Component {\n  state = {\n    password: \"\",\n    cpassword: \"\",\n    isPasswordMatched: true\n  };\n  handleSubmit = e => {\n    //   const form = document.querySelector(\"#register\");\n    const form = document.getElementById(\"register\");\n    let formData = new FormData(form);\n    // const formData = { name: \"name raj\" };\n\n    this.props.signUp(formData);\n  };\n  onPasswordChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  verifyPassword = ({ target: { value, name } }) => {\n    if (value === this.state.password) {\n      this.setState({ [name]: value, isPasswordMatched: true });\n    } else {\n      this.setState({ [name]: value, isPasswordMatched: false });\n    }\n  };\n\n  render() {\n    const { password, cpassword, isPasswordMatched } = this.state;\n    const {\n      params: { error }\n    } = this.props.match;\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\" style={{ background: \"#fcb4b8\" }}>\n          {error && (\n            <div\n              className=\"alert-danger p-2 text-center\"\n              style={{ marginTop: \"-50px\", marginBottom: \"20px\" }}\n            >\n              <strong>Failed !! </strong> to create account <br />\n              <strong> Please try again !!!</strong>\n            </div>\n          )}\n          <form\n            onSubmit={e => e.preventDefault()}\n            id=\"register\"\n            encType=\"multipart/form-data\"\n            name=\"register\"\n          >\n            <div className=\"title\">\n              <h1>Registration Form</h1>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"userName\">User Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"userName\"\n                  placeholder=\"User Name\"\n                  name=\"userName\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"Password\"\n                  onChange={this.onPasswordChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"cpassword\"> Conform Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"cpassword\"\n                  value={cpassword}\n                  name=\"cpassword\"\n                  onChange={this.verifyPassword}\n                  aria-describedby=\"pass\"\n                  placeholder=\"Conform Password\"\n                  required\n                />\n                {!isPasswordMatched && (\n                  <small id=\"pass\" className=\"form-text text-danger\">\n                    Password not Mathched\n                  </small>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                name=\"address\"\n                placeholder=\"Eg:-Kathmandu\"\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              onClick={this.handleSubmit}\n              className=\"btn \"\n              disabled={isPasswordMatched ? false : true}\n            >\n              Register\n            </button>\n            <button type=\"reset\" className=\"btn  ml-4\">\n              Reset\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Register);\n","import React from \"react\";\n\nexport default ({ user, you, allUser }) => {\n  return (\n    <div className=\"list\">\n      <h3>Chatter User</h3>\n      {allUser &&\n        allUser.map((d, i) => (\n          <div\n            className={\n              d.userName === you\n                ? \"you online list-item\"\n                : user.includes(d.userName)\n                ? \"online list-item\"\n                : \"list-item offline\"\n            }\n            key={d.userName + i}\n          >\n            <i className=\"fa fa-user\" /> &nbsp;\n            {d.userName + \"  \"}\n            {d.userName === you ? \"(you)\" : \"\"}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ message, user, allMessage }) => {\n  return (\n    <React.Fragment>\n      {allMessage &&\n        allMessage.map((d, i) => (\n          <div\n            className={d.userName === user ? \"you message\" : \"message\"}\n            key={d.message + i}\n          >\n            <span>{d.sender.userName} :</span> {d.message}\n          </div>\n        ))}\n      {message &&\n        message.map((d, i) => (\n          <div\n            className={d.username === user ? \"you message\" : \"message\"}\n            key={d.message + i}\n          >\n            <span>{d.username} :</span> {d.message}\n          </div>\n        ))}\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Chat extends Component {\n  state = {\n    message: \"\"\n  };\n\n  sendMessage = ({ key }) => {\n    const { socket, profile } = this.props;\n    const { message } = this.state;\n    const data = {\n      username: profile.userName,\n      uid: profile.id,\n      message\n    };\n    if (key === \"Enter\") {\n      socket.emit(\"message\", data);\n      this.setState({ message: \"\" });\n    }\n  };\n\n  onChange = ({ target: { value } }) => {\n    this.setState({ message: value });\n  };\n\n  render() {\n    const { message } = this.state;\n    return (\n      <form className=\"chat-text-input\" onSubmit={e => e.preventDefault()}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"chat\"\n            name=\"message\"\n            value={message}\n            onChange={this.onChange}\n            onKeyUp={this.sendMessage}\n            aria-describedby=\"chat-text\"\n            placeholder=\"Enter text to chat\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  state\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Chat);\n","import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { connect } from \"react-redux\";\n\nimport constants from \"../../utils/constants\";\nimport User from \"./User\";\nimport Message from \"./Message\";\nimport Chat from \"./Chat\";\nimport * as actions from \"../../reduxStore/actions\";\nconst C = constants();\nclass AuthLanding extends Component {\n  state = {\n    socket: \"\",\n    messages: [],\n    members: []\n  };\n\n  componentDidMount = () => {\n    this.props.getMembers();\n    this.props.getMessages();\n    let { profile } = this.props;\n    const { userName, id } = profile && profile;\n    if (profile) {\n      const socket = socketIOClient(C.host, {\n        query: \"username=\" + userName + \"&uid=\" + id\n      });\n      socket.on(\"message\", data => {\n        let { messages } = this.state;\n        messages = [...messages, data];\n        this.scrollToBottom();\n        this.setState({ messages });\n      });\n\n      socket.on(\"updateUsersList\", data => {\n        this.props.getUsers(data);\n      });\n\n      this.setState({ socket });\n    }\n  };\n\n  scrollToBottom() {\n    let messages = document.getElementsByClassName(\"chat-container\")[0];\n\n    messages.scrollTop = messages.scrollHeight - messages.clientHeight;\n    console.log(\n      \"YEBA\",\n      messages.scrollHeight,\n      messages.clientHeight,\n      messages.scrollTop\n    );\n  }\n  render() {\n    let { profile, users, allUser, allMessage } = this.props;\n    console.log(\"al\", allUser);\n    const { socket, messages } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-sm-3\">\n            {allUser && (\n              <User\n                user={users}\n                you={profile && profile.userName}\n                allUser={allUser}\n              />\n            )}\n          </div>\n\n          <div className=\"col-sm-9\">\n            <div className=\"chat-container\">\n              {allMessage && (\n                <Message\n                  message={messages}\n                  allMessage={allMessage}\n                  user={profile && profile.userName}\n                />\n              )}\n            </div>\n            <Chat socket={socket} profile={profile} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer,\n  users: state.getUsers,\n  allUser: state.getMembers,\n  allMessage: state.getMessage\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(AuthLanding);\n","export default () => ({\n  host: \"ws://localhost:4000/chatroom\",\n  darkSkyApiKey: \"255ca3e599e402e7891bc5f329f7428c\"\n});\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport \"./landing.css\";\nimport { NavLink } from \"react-router-dom\";\nimport bg from \"../../img/bg.gif\";\nimport { getJWT } from \"../../utils/helpers\";\nimport AuthLanding from \"./AuthLanding\";\n\nclass Landing extends Component {\n  render() {\n    let auth = getJWT();\n    let { profile } = this.props;\n    return (\n      <div id={!auth ? \"landing\" : \"auth-landing\"}>\n        {auth && profile ? (\n          <AuthLanding profile={profile} />\n        ) : (\n          <Fragment>\n            <img src={bg} alt=\"bg\" />\n            <div className=\"overlay\">\n              <div className=\"text\">\n                <h1>ChaTTer</h1>\n                <div>Connet easily</div>\n                <NavLink\n                  to={auth ? \"/pay/\" : \"/register\"}\n                  className=\"border btn text-white mt-3\"\n                >\n                  {auth ? \"pay\" : \"Sign Up for Free\"}\n                </NavLink>\n                <div className=\"d-block d-lg-none\">\n                  <NavLink className=\"btn border mt-3 text-white\" to=\"/login\">\n                    Login\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ profile: state.getProfileReducer });\nexport default connect(\n  mapStateToProps,\n  actions\n)(Landing);\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { getJWT } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../reduxStore/actions\";\nimport \"./nav.css\";\nclass Nav extends Component {\n  componentDidMount = () => {\n    const { profile } = this.props;\n    let auth = getJWT();\n    auth && !profile && this.props.getProfile();\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"chatter-auth\");\n    this.props.history.push(\"/\");\n    window.location.reload();\n  };\n\n  dispayProfile = () => {\n    let profileContainer = document.querySelector(\".profile\");\n    let ls = profileContainer.classList;\n    ls.toggle(\"d-none\");\n  };\n\n  render() {\n    const authToken = getJWT();\n    const { profile } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <div className=\"container\">\n          <NavLink className=\"navbar-brand\" to=\"/\">\n            ChaTTer\n          </NavLink>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav d-none d-sm-block d-md-none\">\n              <li className=\"nav-item active\">\n                <NavLink className=\"nav-link\" to=\"/\">\n                  login\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          {authToken ? (\n            <Fragment>\n              {/* <NavLink\n                className=\"pl-3 pr-3\"\n                to=\"/chat\"\n                id=\"send\"\n                data-toggle={profile && profile.credits === 0 ? \"modal\" : \"\"}\n                data-target={profile && profile.credits === 0 ? \"#myModal\" : \"\"}\n              >\n                Begin Chat\n              </NavLink> */}\n              <NavLink className=\"float-right pl-3 pr-3\" to=\"/add-friend\">\n                Add Friend\n              </NavLink>\n              <NavLink className=\"float-right pl-3 pr-3\" to=\"/create-chatroom\">\n                Create Chatroom\n              </NavLink>\n              {profile && (\n                <div className=\"profile-container\">\n                  <div className=\"profile d-none\">\n                    <div>\n                      <NavLink to=\"/profile-edit\" onClick={this.dispayProfile}>\n                        Edit Profile\n                      </NavLink>\n                    </div>\n                    <div>User Name: {profile && profile.userName}</div>\n                    <div onClick={this.logout}>Logout</div>\n                  </div>\n                </div>\n              )}\n              <span\n                className=\"d-none d-lg-block m-1 p-1 text-white\"\n                onClick={this.dispayProfile}\n              >\n                profile\n              </span>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <NavLink className=\"float-right d-none d-lg-block\" to=\"/register\">\n                Register\n              </NavLink>\n\n              <NavLink\n                className=\"float-right d-none d-lg-block ml-3\"\n                to=\"/login\"\n              >\n                Login\n              </NavLink>\n            </Fragment>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  profile: state.getProfileReducer\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(withRouter(Nav));\n","import React, { Component } from \"react\";\n\nexport default class AddFriend extends Component {\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"alert alert-success text-center\">\n          <strong>Success!</strong> Now add frineds.\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getJWT } from \"../../utils/helpers\";\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  let auth = getJWT();\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/common/Login\";\nimport Register from \"./components/common/Register\";\nimport Landing from \"./components/Landing\";\nimport Nav from \"./components/common/Nav\";\nimport AddFriend from \"./components/AddFrined\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/login/:error?\" component={Login} />\n          <Route exact path=\"/register/:error?\" component={Register} />\n          <Route exact path=\"/\" component={Landing} />\n          <PrivateRoute exact path=\"/add-friend\" component={AddFriend} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport getProfileReducer from \"./getProfileReducer\";\nimport getUsers from \"./getUsers\";\nimport getChatrooms from \"./getChatrooms\";\nimport getMembers from \"./getMemers\";\nimport getMessage from \"./getMessage\";\n\nexport default combineReducers({\n  getProfileReducer,\n  getUsers,\n  getChatrooms,\n  getMembers,\n  getMessage\n});\n","import { GET_PROFILE } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CONNECTED_USER } from \"../constants\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case GET_CONNECTED_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_ROOM } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_ROOM:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_MEMBER } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_MEMBER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { GET_CHAT_MESSAGE } from \"../constants\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_CHAT_MESSAGE:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport mainReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nfunction configureStore() {\n  return createStore(mainReducer, composeWithDevTools(applyMiddleware(thunk)));\n}\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport reduxStore from \"./reduxStore\";\nimport \"jquery\";\nimport \"popper.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nconst store = reduxStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.91f1dec1.gif\";"],"sourceRoot":""}